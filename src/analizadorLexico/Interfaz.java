/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizadorLexico;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.StringTokenizer;
import javax.swing.table.DefaultTableModel;


public class Interfaz extends javax.swing.JFrame {

    private String titulo = "Analizador Lexico";
    private ArrayList<Token> analizarTokens;
    private AnalizadorLexico analizadorLexico;
    private int numeroLinea = 1;
    private String error = "Hubo un error en el análisis léxico";
    private ArrayList<Expresion> arr;
    ArrayList<String> code;
    private boolean analisisok=false;
    
    
    

    /**
     * Creates new form InterfazFinalAnalixador
     */
    public Interfaz() {
        initComponents();

        this.setTitle(titulo);
        this.setLocationRelativeTo(null);
        analizarTokens = new ArrayList();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        
       
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAnalixador = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jpanelInterfazEscribir = new javax.swing.JPanel();
        escribirTxt = new javax.swing.JTextArea();
        lineaTxt = new javax.swing.JTextArea();
        mensajetxt = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        imprimirText = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        analizarBoton1 = new javax.swing.JButton();
        analizarBoton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        escribirTxt2 = new javax.swing.JTextArea();
        analizarBoton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        escribirTxt1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaAnalixador.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tablaAnalixador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Linea", "Token            ", "Lexema"
            }
        ));
        jScrollPane1.setViewportView(tablaAnalixador);
        if (tablaAnalixador.getColumnModel().getColumnCount() > 0) {
            tablaAnalixador.getColumnModel().getColumn(0).setMinWidth(50);
            tablaAnalixador.getColumnModel().getColumn(0).setMaxWidth(13);
            tablaAnalixador.getColumnModel().getColumn(1).setMinWidth(120);
            tablaAnalixador.getColumnModel().getColumn(2).setMinWidth(100);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 330, 180));

        jScrollPane2.setAutoscrolls(true);

        jpanelInterfazEscribir.setBackground(new java.awt.Color(102, 102, 255));
        jpanelInterfazEscribir.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jpanelInterfazEscribir.setAutoscrolls(true);

        escribirTxt.setColumns(20);
        escribirTxt.setRows(5);
        escribirTxt.setText("origen inicio\n#Este es un código de prueba\nvariable1 =  2\nvariable2 =  variable1\nvariable3 = \"hola\"\nvariable5 = variable3+\" mundo\"\nsi ¿variable1!= 1 ? inicio\n imprimir¿variable5?\nfin sino inicio\nvariable2=1+variable2+5\nfin\nvariable4=1+2+3+4+5+6\nsi¿1==1? inicio\nimprimir¿\"true\"?\nfin\nfin");
        escribirTxt.setWrapStyleWord(true);
        escribirTxt.setAutoscrolls(false);
        escribirTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                escribirTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                escribirTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                escribirTxtKeyTyped(evt);
            }
        });

        lineaTxt.setEditable(false);
        lineaTxt.setColumns(20);
        lineaTxt.setRows(5);
        lineaTxt.setText("1");
        lineaTxt.setAutoscrolls(false);

        javax.swing.GroupLayout jpanelInterfazEscribirLayout = new javax.swing.GroupLayout(jpanelInterfazEscribir);
        jpanelInterfazEscribir.setLayout(jpanelInterfazEscribirLayout);
        jpanelInterfazEscribirLayout.setHorizontalGroup(
            jpanelInterfazEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelInterfazEscribirLayout.createSequentialGroup()
                .addComponent(lineaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(escribirTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpanelInterfazEscribirLayout.setVerticalGroup(
            jpanelInterfazEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelInterfazEscribirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelInterfazEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lineaTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addComponent(escribirTxt))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jpanelInterfazEscribir);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 17, -1, 540));

        mensajetxt.setBackground(new java.awt.Color(153, 153, 153));
        mensajetxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mensajetxt.setForeground(new java.awt.Color(0, 153, 0));
        jPanel2.add(mensajetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 360, 20));

        imprimirText.setColumns(20);
        imprimirText.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        imprimirText.setForeground(new java.awt.Color(255, 0, 0));
        imprimirText.setRows(5);
        jScrollPane3.setViewportView(imprimirText);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 330, 130));

        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel1.setText("Analizador");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 380, -1, -1));

        analizarBoton1.setBackground(new java.awt.Color(255, 255, 255));
        analizarBoton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/analizadorLexico/Search-icon.png"))); // NOI18N
        analizarBoton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarBoton1ActionPerformed(evt);
            }
        });
        jPanel2.add(analizarBoton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 60, 50));

        analizarBoton2.setBackground(new java.awt.Color(255, 255, 255));
        analizarBoton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/analizadorLexico/Search-icon.png"))); // NOI18N
        analizarBoton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarBoton2ActionPerformed(evt);
            }
        });
        jPanel2.add(analizarBoton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, 60, 50));

        jLabel2.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel2.setText("Código intermedio");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 450, -1, -1));

        escribirTxt2.setEditable(false);
        escribirTxt2.setColumns(20);
        escribirTxt2.setRows(5);
        escribirTxt2.setWrapStyleWord(true);
        escribirTxt2.setAutoscrolls(false);
        escribirTxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                escribirTxt2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                escribirTxt2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                escribirTxt2KeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(escribirTxt2);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, 270, 530));

        analizarBoton3.setBackground(new java.awt.Color(255, 255, 255));
        analizarBoton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/analizadorLexico/Search-icon.png"))); // NOI18N
        analizarBoton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarBoton3ActionPerformed(evt);
            }
        });
        jPanel2.add(analizarBoton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, 60, 50));

        jLabel3.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel3.setText("Código final");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 510, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 600));

        escribirTxt1.setColumns(20);
        escribirTxt1.setRows(5);
        escribirTxt1.setText("origen inicio\n#Este es un código de prueba\nvariable1 =  2\nvariable2 =  variable1\nvariable3 = \"hola\"\nvariable5 = variable3+\" mundo\"\nsi ¿variable1 == 1 ? inicio\n imprimir¿\"a\" ?\nfin sino inicio\nvariable2=1+variable2+5\nfin\nfin");
        escribirTxt1.setWrapStyleWord(true);
        escribirTxt1.setAutoscrolls(false);
        escribirTxt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                escribirTxt1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                escribirTxt1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                escribirTxt1KeyTyped(evt);
            }
        });
        getContentPane().add(escribirTxt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 329, 511));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Actualiza la barra lateral para el formato de numeración de líneas
    //Totalmente innecesario xd
    private void escribirTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxtKeyTyped
        char tecla = evt.getKeyChar();
        //Actualiza la barra lateral cuando se inserta una nueva linea
        if ((int) tecla == KeyEvent.VK_ENTER) {
            numeroLinea++;
            String num = lineaTxt.getText() + '\n' + numeroLinea;
            lineaTxt.setText(num);
        }
        //Actualiza la barra lateral cuando se borran lineas
        if ((int) tecla == KeyEvent.VK_BACK_SPACE || (int) tecla == KeyEvent.VK_DELETE) {

            while (numeroLinea > escribirTxt.getLineCount()) {
                String num = lineaTxt.getText();
                if (escribirTxt.getLineCount() < numeroLinea) {
                    if (numeroLinea < 10) {
                        num = num.substring(0, num.length() - 2);
                        lineaTxt.setText(num);
                        numeroLinea--;
                    }
                    if (numeroLinea > 9 && numeroLinea < 100) {
                        num = num.substring(0, num.length() - 3);
                        lineaTxt.setText(num);
                        numeroLinea--;
                    }
                    if (numeroLinea > 99 && numeroLinea < 1000) {
                        num = num.substring(0, num.length() - 4);
                        lineaTxt.setText(num);
                        numeroLinea--;
                    }
                }
            }
        }
        //Actualiza la barra lateral al añadirse varias lineas a la vez
        if ((int) tecla == 22) {
            while (numeroLinea < escribirTxt.getLineCount()) {
                numeroLinea++;
                String num = lineaTxt.getText() + '\n' + numeroLinea;
                lineaTxt.setText(num);
            }
        }
    }//GEN-LAST:event_escribirTxtKeyTyped

    private void escribirTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxtKeyReleased

    }//GEN-LAST:event_escribirTxtKeyReleased

    private void escribirTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxtKeyPressed

    private void analizarBoton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarBoton1ActionPerformed
        // TODO add your handling code here:
        try {
            String codigo= escribirTxt.getText();
            analizadorLexico = new AnalizadorLexico(codigo);
            analizarTokens = analizadorLexico.analizarCodigo();

            DefaultTableModel modelo = (DefaultTableModel) tablaAnalixador.getModel();
            int filas = tablaAnalixador.getRowCount() - 1;
            for (int i = filas; i >= 0; i--) {
                modelo.removeRow(i);
            }

            String mensajeErrores = "";
            for (Token token : analizarTokens) {
                if (!token.getCategoria().equalsIgnoreCase(Token.SIMBOLOS_NO_RECONOCIDOS)) {
                    modelo.addRow(new Object[]{token.getLineaSiguiente(), token.getCategoria(), token.getLexema()});
                }
                if (token.getCategoria().equalsIgnoreCase(Token.SIMBOLOS_NO_RECONOCIDOS)) {
                    mensajeErrores += "Error : El lexema " + token.getLexema() + " ubicado en la línea " + token.getLineaSiguiente() + " no es reconocido.\n";
                }
            }
            imprimirText.setText(mensajeErrores);

        } catch (Exception e) {
            imprimirText.setText(error);//error
        }
        
        
        if(!analizarTokens.isEmpty()){
        AnalizadorSintactico as = new AnalizadorSintactico(analizarTokens);
        arr=as.analizar();            
        imprimirText.setText(as.getErrCode());
        as.imprimeExp();
        if(as.getErrCode().equals("Analisis OK")){
            AnalizadorSemantico az= new AnalizadorSemantico(arr);
            if(az.analizar()){
                imprimirText.setText("Analisis OK");
                analisisok=true;
            } else imprimirText.setText(az.getErrCode());
            //az.dumpVar();
        }            
            
            
        }
        else imprimirText.setText("No hay tokens");
        
        
                            
    }//GEN-LAST:event_analizarBoton1ActionPerformed

    private void analizarBoton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarBoton2ActionPerformed
        escribirTxt2.setText("");
        Intermedio inter = new Intermedio(arr);
            code=inter.generar();
            for(String s:code){
                escribirTxt2.setText(escribirTxt2.getText()+s);
                escribirTxt2.setText(escribirTxt2.getText()+"\n");
            }
            
            
    }//GEN-LAST:event_analizarBoton2ActionPerformed

    private void escribirTxt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxt1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxt1KeyPressed

    private void escribirTxt1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxt1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxt1KeyReleased

    private void escribirTxt1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxt1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxt1KeyTyped

    private void escribirTxt2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxt2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxt2KeyPressed

    private void escribirTxt2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxt2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxt2KeyReleased

    private void escribirTxt2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_escribirTxt2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_escribirTxt2KeyTyped

    private void analizarBoton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarBoton3ActionPerformed
        escribirTxt2.setText("");
        Transpilador trans= new Transpilador(code);
        ArrayList<String> python= trans.transpila();
        for(String s:python){
                escribirTxt2.setText(escribirTxt2.getText()+s);
                escribirTxt2.setText(escribirTxt2.getText()+"\n");
            }
    }//GEN-LAST:event_analizarBoton3ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizarBoton1;
    private javax.swing.JButton analizarBoton2;
    private javax.swing.JButton analizarBoton3;
    private javax.swing.JTextArea escribirTxt;
    private javax.swing.JTextArea escribirTxt1;
    private javax.swing.JTextArea escribirTxt2;
    private javax.swing.JTextArea imprimirText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jpanelInterfazEscribir;
    private javax.swing.JTextArea lineaTxt;
    private javax.swing.JLabel mensajetxt;
    private javax.swing.JTable tablaAnalixador;
    // End of variables declaration//GEN-END:variables
}
